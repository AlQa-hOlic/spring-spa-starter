plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
	// id 'org.graalvm.buildtools.native' version '0.9.20'
	id 'org.flywaydb.flyway' version '9.8.1'
	id 'com.github.node-gradle.node' version '4.0.0'
}

group = 'in.alqaholic'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.springframework:spring-jdbc'
	
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	// runtimeOnly 'com.h2database:h2'
	// runtimeOnly 'io.r2dbc:r2dbc-h2'
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'org.postgresql:r2dbc-postgresql'

	implementation 'org.springframework.boot:spring-boot-docker-compose'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('bootRun') {
  systemProperty 'spring.profiles.active', findProperty('profile') ?: 'local'
}

def buildWebapp = tasks.register('buildWebapp', YarnTask) {
  dependsOn(yarn)
  args = ['workspace', 'frontend', 'build']
  inputs.dir(fileTree('frontend').exclude('**/*.test.(j|t)sx?').exclude('**/*.spec.(j|t)sx?').exclude('**/__tests__/**/*.(j|t)sx?'))
  inputs.dir('node_modules')
  // inputs.dir("public")
  outputs.dir("${buildDir}/ts")
  // environment = ["BUILD_PATH": "${buildDir}/webapp/webroot"]
}

def buildMailTemplates = tasks.register('buildMailTemplates', YarnTask) {
  dependsOn(yarn)
  args = ['workspace', 'mail-templates', 'build']
  inputs.dir(fileTree('mail-templates').exclude('**/*.test.(j|t)sx?').exclude('**/*.spec.(j|t)sx?').exclude('**/__tests__/**/*.(j|t)sx?'))
  inputs.dir('node_modules')
  // inputs.dir("public")
  outputs.dir("${buildDir}/resources/main/mailTemplates")
  // environment = ["BUILD_PATH": "${buildDir}/webapp/webroot"]
}

sourceSets {
    main {
      resources {
        // This makes the processResources task automatically depend on the buildWebapp one
        srcDir(buildWebapp)
        srcDir(buildMailTemplates)
      }
    }
}
